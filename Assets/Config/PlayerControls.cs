//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Config/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""PlayerIMap"",
            ""id"": ""15f8ae6d-6080-44c3-80ab-1c892ca9e80b"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""74388df2-4908-4e2c-a5cf-5eb266c49612"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""ddcc18a5-0e92-49ad-afcf-192dca17f9df"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShootLook"",
                    ""type"": ""Value"",
                    ""id"": ""e7569843-04fe-432a-b643-32cd5b6d981b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""7203de30-6f20-4c8e-9f4e-f6646b333c5e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""59880484-c838-4121-b0c0-032c93a0d28c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dodge"",
                    ""type"": ""Button"",
                    ""id"": ""c37e2d2c-d719-4c9e-9d74-56c525e14936"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""be82a004-70b1-4237-9c57-f7095740735f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""80bb46e9-7ba3-43ff-9378-56b6370e0de0"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""player"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""9059f51f-babd-425e-9afc-7c6204b3046c"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c8d37050-e613-49aa-bd0c-689cb2ed396f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""player"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""18484656-e44e-4997-94a8-e42b2e140698"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""player"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""ba4bb415-cd9f-402a-a480-2b360e1fa201"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""player"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e305085e-8c71-4690-b3d3-83b3b47504c6"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""player"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""cfdd52d9-0481-4f71-b9bf-8b95d7327d7b"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""player"",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1af3b01c-6a5f-485e-9c78-3f9fc631021d"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""player"",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba14a6c9-eae6-41ed-b44c-89ebed8ddaa4"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""player"",
                    ""action"": ""ShootLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""344c1155-def4-4ab5-89aa-005929eb1e78"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShootLook"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""fd5cf252-9d0e-4c10-8d0c-8a1e6a6c8122"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""player"",
                    ""action"": ""ShootLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""e2173236-e4cf-4966-bf28-c6764ef2d50c"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""player"",
                    ""action"": ""ShootLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""36d0f125-e992-460c-b240-e3e5755240a3"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""player"",
                    ""action"": ""ShootLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""75d6411b-75d8-4573-a4d4-a308cdb10e58"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""player"",
                    ""action"": ""ShootLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""f2f021a8-d741-461e-8dec-138c4396408e"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""player"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f924d098-705a-4dc8-80e0-349d19efad82"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""player"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""701e43cf-46a8-4017-85d3-62ea9983483e"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""player"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7dc62a06-8391-4f91-b294-cf8d35025f52"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""player"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e73cd28-7d9e-4ebc-8093-20e307264575"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""player"",
                    ""action"": ""Dodge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""542f62d1-1e16-41b2-b3ea-e6d24849067c"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""player"",
                    ""action"": ""Dodge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""30b8c1aa-2319-4ab7-ab3d-183c59a0ef72"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""player"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4dccfedd-0d13-4b8b-bb39-94d17656fa22"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""player"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""player"",
            ""bindingGroup"": ""player"",
            ""devices"": []
        }
    ]
}");
        // PlayerIMap
        m_PlayerIMap = asset.FindActionMap("PlayerIMap", throwIfNotFound: true);
        m_PlayerIMap_Move = m_PlayerIMap.FindAction("Move", throwIfNotFound: true);
        m_PlayerIMap_Shoot = m_PlayerIMap.FindAction("Shoot", throwIfNotFound: true);
        m_PlayerIMap_ShootLook = m_PlayerIMap.FindAction("ShootLook", throwIfNotFound: true);
        m_PlayerIMap_Interact = m_PlayerIMap.FindAction("Interact", throwIfNotFound: true);
        m_PlayerIMap_Pause = m_PlayerIMap.FindAction("Pause", throwIfNotFound: true);
        m_PlayerIMap_Dodge = m_PlayerIMap.FindAction("Dodge", throwIfNotFound: true);
        m_PlayerIMap_Jump = m_PlayerIMap.FindAction("Jump", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerIMap
    private readonly InputActionMap m_PlayerIMap;
    private IPlayerIMapActions m_PlayerIMapActionsCallbackInterface;
    private readonly InputAction m_PlayerIMap_Move;
    private readonly InputAction m_PlayerIMap_Shoot;
    private readonly InputAction m_PlayerIMap_ShootLook;
    private readonly InputAction m_PlayerIMap_Interact;
    private readonly InputAction m_PlayerIMap_Pause;
    private readonly InputAction m_PlayerIMap_Dodge;
    private readonly InputAction m_PlayerIMap_Jump;
    public struct PlayerIMapActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerIMapActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_PlayerIMap_Move;
        public InputAction @Shoot => m_Wrapper.m_PlayerIMap_Shoot;
        public InputAction @ShootLook => m_Wrapper.m_PlayerIMap_ShootLook;
        public InputAction @Interact => m_Wrapper.m_PlayerIMap_Interact;
        public InputAction @Pause => m_Wrapper.m_PlayerIMap_Pause;
        public InputAction @Dodge => m_Wrapper.m_PlayerIMap_Dodge;
        public InputAction @Jump => m_Wrapper.m_PlayerIMap_Jump;
        public InputActionMap Get() { return m_Wrapper.m_PlayerIMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerIMapActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerIMapActions instance)
        {
            if (m_Wrapper.m_PlayerIMapActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_PlayerIMapActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_PlayerIMapActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_PlayerIMapActionsCallbackInterface.OnMove;
                @Shoot.started -= m_Wrapper.m_PlayerIMapActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_PlayerIMapActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_PlayerIMapActionsCallbackInterface.OnShoot;
                @ShootLook.started -= m_Wrapper.m_PlayerIMapActionsCallbackInterface.OnShootLook;
                @ShootLook.performed -= m_Wrapper.m_PlayerIMapActionsCallbackInterface.OnShootLook;
                @ShootLook.canceled -= m_Wrapper.m_PlayerIMapActionsCallbackInterface.OnShootLook;
                @Interact.started -= m_Wrapper.m_PlayerIMapActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_PlayerIMapActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_PlayerIMapActionsCallbackInterface.OnInteract;
                @Pause.started -= m_Wrapper.m_PlayerIMapActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_PlayerIMapActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_PlayerIMapActionsCallbackInterface.OnPause;
                @Dodge.started -= m_Wrapper.m_PlayerIMapActionsCallbackInterface.OnDodge;
                @Dodge.performed -= m_Wrapper.m_PlayerIMapActionsCallbackInterface.OnDodge;
                @Dodge.canceled -= m_Wrapper.m_PlayerIMapActionsCallbackInterface.OnDodge;
                @Jump.started -= m_Wrapper.m_PlayerIMapActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerIMapActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerIMapActionsCallbackInterface.OnJump;
            }
            m_Wrapper.m_PlayerIMapActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
                @ShootLook.started += instance.OnShootLook;
                @ShootLook.performed += instance.OnShootLook;
                @ShootLook.canceled += instance.OnShootLook;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
                @Dodge.started += instance.OnDodge;
                @Dodge.performed += instance.OnDodge;
                @Dodge.canceled += instance.OnDodge;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
            }
        }
    }
    public PlayerIMapActions @PlayerIMap => new PlayerIMapActions(this);
    private int m_playerSchemeIndex = -1;
    public InputControlScheme playerScheme
    {
        get
        {
            if (m_playerSchemeIndex == -1) m_playerSchemeIndex = asset.FindControlSchemeIndex("player");
            return asset.controlSchemes[m_playerSchemeIndex];
        }
    }
    public interface IPlayerIMapActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
        void OnShootLook(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnDodge(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
    }
}
